{
	"info": {
		"_postman_id": "5e2e9a23-ca62-4254-b8bd-b9cc5b3195ea",
		"name": "PI-Testes-Icone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5473166"
	},
	"item": [
		{
			"name": "autenticarPorLogin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
							"\r",
							"//pm.environment.set(\"IDUser\", pm.response.json().user.id);\r",
							"\r",
							"pm.test(\"Código de retorno é 200\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest('buscarIcones');\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"maria@teste.com\",\r\n  \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Auth_URL}}",
					"host": [
						"{{Auth_URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "buscarIcones",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de retorno é 200\",  () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest('adicionarIcone');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Base_URL}}/icone",
					"host": [
						"{{Base_URL}}"
					],
					"path": [
						"icone"
					]
				}
			},
			"response": []
		},
		{
			"name": "adicionarIcone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de retorno é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"IDIcone\", pm.response.json().id);\r",
							"\r",
							"pm.test(\"Tempo de resposta é até 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"postman.setNextRequest('buscarIconePorId');\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"frigobar\",\r\n  \"nome_icone\": \"#frigobar\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}/icone",
					"host": [
						"{{Base_URL}}"
					],
					"path": [
						"icone"
					]
				}
			},
			"response": []
		},
		{
			"name": "buscarIconePorId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de retorno é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Valida se o id retornado é igual a variavel global\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get('IDIcone'));\r",
							"});\r",
							"\r",
							"postman.setNextRequest('atualizarIcone');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Base_URL}}/icone/{{IDIcone}}",
					"host": [
						"{{Base_URL}}"
					],
					"path": [
						"icone",
						"{{IDIcone}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "atualizarIcone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Sucesso ao atualizar\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Valida se a respota está correta!\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    if(jsonData.id == parseInt(pm.environment.get('IDIcone'))){\r",
							"        console.log(\"Icone atualizada!\")\r",
							"    }\r",
							"\r",
							"});\r",
							"\r",
							"postman.setNextRequest('deletarIcone');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"piscina\",\r\n  \"nome_icone\": \"#piscina\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}/icone/atualizar/{{IDIcone}}",
					"host": [
						"{{Base_URL}}"
					],
					"path": [
						"icone",
						"atualizar",
						"{{IDIcone}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deletarIcone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de retorno é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Icone foi encontradas\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Icone apagado!\");\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Base_URL}}/icone/delete/{{IDIcone}}",
					"host": [
						"{{Base_URL}}"
					],
					"path": [
						"icone",
						"delete",
						"{{IDIcone}}"
					]
				}
			},
			"response": []
		}
	]
}